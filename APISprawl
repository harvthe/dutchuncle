What is Digital Sprawl or API Sprawl, do I need it? How do we get rid of it?

How to combat API Sprawl.

I am not a native English speaker, and it took me about 5 presentations where people used the “fashion word” API Sprawl to google sprawl. So what is it? To quote Cambridge Dictionary sprawl means: a position with the arms and legs spread out carelessly and untidily while sitting or lying down. It already mentions that the word is more often used when talking about to identify “unrestricted growth in many urban areas of housing commercial development, and roads over large expanses of land, with little concern for urban planning” in other words, Urban Sprawl. 

Luckily Urban Sprawl is much harder to manage than Digital, or API Sprawl. Managing Urban sprawl requires you to manage the Infrastructure to get people from A to B, but it gets really complex when you are managing pollution, water, energy.

There are similarities between Digital/API Sprawl and Urban Sprawl, both address an ecosystem of people who rely on a range of services. In our Urban Sprawl example everybody understands that we need to have small and bigger roads, which can be re-used by many, which are clearly marked, governed (to make sure people play by the rules), which are trusted by people and which can be found / discovered by people in planning their journey to wherever they go. There are larger roads which are (re-used) by many, and there are smaller roads which only suit certain use cases / destinations. Just because a road is smaller it doesn’t mean we can accept potholes in it, or we don’t need to put it on the map. We all understand it is important that not everyone creates his own road, but that we need to re-use the existing roads.

The similarity in this example is with our APIs. Initially it is easy to create an API, just like it is to create a Road (ask any 4x4 fan). But we don’t want 10 roads going to the same destination, because it is much harder to maintain and govern! Same with an API, very easy to create, much harder to maintain. 

We also understand that some cities are better setup than others. In some cities it is very hard to get from point A to B (for those in Australia, take Sydney) while other cities seem to have done better (take our capital Canberra). We strive for a liveable city, one that has a good balance of looking after the environment, addressing needs for cars and cyclist, it will attract people to join the city and it will make it easier for businesses in the city to work efficiently. 

In order for companies to thrive in a digital world, it is also important to combat API sprawl and setup a good API ecosystem where employees and digital services can thrive. Combating Sprawl (in both examples) is a continuous exercise. Unfortunately, there is not a product which you can buy which will combat the Sprawl (in both cases). What have companies done to assure their digital services didn’t go stuck behind the Sprawl?

1.	Learn, look, compare on continues base to what companies have done who are a proven digital player. Just like with urban sprawl there are always companies (or with urban sprawl cities) who have got themselves into big problems or have come up with innovative ideas which work. Talk to the companies or talk to the experts who have been dealing with these companies. In many cases API vendors have seen their products used in a non perfect way and sometimes their products have been used in good ways. Cities around the world are continuously doing field trips to other cities to see what has worked. I know most Australian cities have planning agents visit the Netherlands to see how they cater for the many cyclist. Somehow as a company it is still not done to talk about to the challenges we have to become a true digital player, or to compete with the new digital players.

Combatting API sprawl often starts with focussing on re-use of APIs. The biggest problem by far is how easy it is to create an API. The. Below points are helping in re-use:

2.	Focus on visibility
As with the roads, it is of no use to have an API if we haven’t got a central catalogue which gets automatically updated with the capabilities of the API. It is nice for the catalogue to say the number of streetlights, the maximum speed, but we really sometimes need somebody to say what the road leads to, what does the API do? APIs are harder to explain than roads, make sure you have the correct people who can outline what the business value of the API is. 
3.	Create Trust
Developers have learned through thick and thin not to trust other people’s work. For a developer to use another developers API, he needs a lot of re-assurance that the API will do what it says in the documentation. Creating trust is not easy! Start with making sure that any developer can “test” the API, even if the real backend can’t be used, have a test version of the API so the developer can have instant access to see if the API is fit for purpose. As any webshop, it is good to give developers a feedback loop, allow developers to give feedback rating 1-5 stars) or even better have a forum where developers help developers with questions on the API, this will give confidence there is a future for the API!  
4.	Create a house style for your APIs
This goes without saying, but it requires a lot of effort! Everyone understands that we need similar rules and signs for our city’s roads, we want them to look similar, although some of them might server different purposes. If not, it would get very confusing for the people using that road. It goes without saying that without a clear Digital Identity a company will never thrive. API guidelines are at the start, easy to create, much harder to be enforced. A good API design tool will be your best friend, but in some cases you want to invest in the right people who can motivate the rest of the company to do the right thing in regard with how the APIs are designed. 
5.	Make it easy!
We have the tendency to make thing complicated. Sometimes there is a new person joining our city and he might want to consume the road, or create a new route to go to work. When new people join it should be easy to read how to make APIs, how to conform to the guidelines, and the tools should be ready to hand over their API to the ecosystem. Similar with getting access to the API, make it easy! There are many examples with our city infrastructure where people always choose the path of least resistance! 
6.	Provide Quality (APIs)
There are many ways to assure quality in APIs. There are many articles on how to create GOOD apis, so there is no need to repeat it here. What is often overlooked, is the need for testing and to give insight into the test results. An API status page (which is updated and maintained in an automatic way) is a perfect way to assure those updates which are needed because of the thriving demand of the API are not endangering the core capabilities of the API. Make sure the test are run continuously, or are being enforced with every API deployment or platform upgrade. 
7.	


